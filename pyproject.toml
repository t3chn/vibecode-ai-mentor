[project]
name = "vibecode-ai-mentor"
version = "0.1.0"
description = "AI-powered code quality analysis tool using TiDB Cloud Vector Search"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "VibeCode Team", email = "team@vibecode.ai"},
]
keywords = ["code-analysis", "ai", "tidb", "vector-search", "code-quality"]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0",
    "tenacity>=8.2.0",
    "rich>=13.7.0",
    "click>=8.1.0",
    "python-dotenv>=1.0.0",
    "tree-sitter>=0.20.0",
    "tree-sitter-python>=0.20.0",
    "pymysql>=1.1.0",
    "aiomysql>=0.2.0",
    "sqlalchemy>=2.0.0",
    "google-generativeai>=0.3.0",
    "openai>=1.0.0",
    "tiktoken>=0.5.0",
    "numpy>=1.26.0",
    "scikit-learn>=1.3.0",
    "aiofiles>=23.2.0",
    "python-jose[cryptography]>=3.3.0",
    "websockets>=12.0",
    "slowapi>=0.1.9",
    "radon>=6.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "types-aiofiles",
    "types-pymysql",
    "locust>=2.17.0",
    "ipython>=8.18.0",
]

[project.scripts]
vibecode = "cli.__main__:main"

[build-system]
requires = ["setuptools>=69.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["src", "cli"]

[tool.ruff]
target-version = "py313"
line-length = 88
indent-width = 4
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false